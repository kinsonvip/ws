<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="site.shzu.ws.dao.JobContractDao">
  <resultMap id="BaseResultMap" type="site.shzu.ws.model.JobContract">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="job_id" jdbcType="INTEGER" property="jobId" />
    <result column="stu_num" jdbcType="VARCHAR" property="stuNum" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="verify_user" jdbcType="VARCHAR" property="verifyUser" />
    <result column="verify_time" jdbcType="TIMESTAMP" property="verifyTime" />
    <result column="confirm_user" jdbcType="VARCHAR" property="confirmUser" />
    <result column="confirm_time" jdbcType="TIMESTAMP" property="confirmTime" />
    <result column="mark" jdbcType="VARCHAR" property="mark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, job_id, stu_num, status, create_time, verify_user, verify_time, confirm_user, confirm_time,
    mark
  </sql>

  <select id="getContractByAccountNum" resultType="java.util.HashMap">
    select jc.id jobContractId,DATE_FORMAT(jc.create_time,'%Y-%m-%d %H:%i:%s') createTime,j.tittle,jc.stu_num stuNum,s.`name`,j.salary,j.workdays,CASE jc.`status`
    WHEN '0' THEN '管理员审核中'
		WHEN '1' THEN '用人部门审核中'
		WHEN '-1' THEN '管理员审核未通过'
		WHEN '2' THEN '录用中'
		WHEN '-2' THEN '用人部门审核未通过'
		WHEN '3' THEN '已完成'
    end `status`,jc.mark
    from job j,job_contract jc,student s
    where j.id = jc.job_id and jc.stu_num = s.stu_num and jc.stu_num = #{accountNum}
    <if test="search != null and search != ''">
      and j.tittle = #{search}
    </if> order by jc.id desc
  </select>

  <select id="getUncheckedContractList" resultType="java.util.HashMap">
    select jc.id jobContractId,DATE_FORMAT(jc.create_time,'%Y-%m-%d %H:%i:%s') createTime,j.tittle jobName,jc.stu_num stuNum,s.`name` stuName,s.sex,j.sex_req sexReq,j.require_num requireNum,j.max_num maxNum,j.accept_num acceptNum,CASE jc.`status`
    WHEN '0' THEN '待审核'
    END status
    from job j,job_contract jc,student s
    where j.id = jc.job_id and jc.stu_num = s.stu_num and jc.`status` = '0'
    <if test="search != null and search != ''">
      and j.tittle = #{search}
    </if> order by jc.id desc
  </select>

  <select id="getCheckedContractList" resultType="java.util.HashMap">
    select jc.id jobContractId,DATE_FORMAT(jc.create_time,'%Y-%m-%d %H:%i:%s') createTime,j.tittle jobName,jc.stu_num stuNum,s.`name` stuName,s.sex,j.sex_req sexReq,j.require_num requireNum,j.max_num maxNum,j.accept_num acceptNum,CASE jc.`status`
    WHEN '1' THEN '已通过'
    WHEN '-1' THEN '已拒绝'
    END status,jc.verify_user verifyUser,DATE_FORMAT(jc.verify_time,'%Y-%m-%d %H:%i:%s') verifyTime
    from job j,job_contract jc,student s
    where j.id = jc.job_id and jc.stu_num = s.stu_num and jc.`status` in ('-1','1')
    <if test="search != null and search != ''">
      and j.tittle = #{search}
    </if> order by jc.id desc
  </select>

  <select id="getUnconfirmedContractListByDep" resultType="java.util.HashMap">
    select distinct jc.id jobContractId,DATE_FORMAT(jc.create_time,'%Y-%m-%d %H:%i:%s') createTime,j.tittle jobName,jc.stu_num stuNum,s.`name` stuName,s.sex,j.sex_req sexReq,j.require_num requireNum,j.max_num maxNum,(select count(distinct jc.id)
    from job j,job_contract jc,emp_dep_sys eds
    where j.id = jc.job_id and jc.`status` in ('2','3') and j.emp_dep_id = eds.emp_dep_id and eds.emp_dep_id = (select emp_dep_id from emp_dep_sys eds where eds.account_num = #{accountNum})) acceptNum,CASE jc.`status`
    WHEN '1' THEN '待确认'
    END status
    from job j,job_contract jc,student s,emp_dep_sys eds
    where j.id = jc.job_id and jc.stu_num = s.stu_num and jc.`status` = '1' and j.emp_dep_id = eds.emp_dep_id and eds.emp_dep_id = (select emp_dep_id from emp_dep_sys eds where eds.account_num = #{accountNum})
    <if test="search != null and search != ''">
      and j.tittle = #{search}
    </if> order by jc.id desc
  </select>

  <select id="getConfirmedContractListByDep" resultType="java.util.HashMap">
    select distinct jc.id jobContractId,DATE_FORMAT(jc.create_time,'%Y-%m-%d %H:%i:%s') createTime,j.tittle jobName,jc.stu_num stuNum,s.`name` stuName,s.sex,j.sex_req sexReq,j.require_num requireNum,j.max_num maxNum,(select count(distinct jc.id)
    from job j,job_contract jc,emp_dep_sys eds
    where j.id = jc.job_id and jc.`status` in ('2','3') and j.emp_dep_id = eds.emp_dep_id and eds.emp_dep_id = (select emp_dep_id from emp_dep_sys eds where eds.account_num = #{accountNum})) acceptNum,jc.confirm_user confirmUser,DATE_FORMAT(jc.confirm_time,'%Y-%m-%d %H:%i:%s') confirmTime,CASE jc.`status`
    WHEN '2' THEN '已录用'
    WHEN '3' THEN '已录用'
    WHEN '-2' THEN '未录用'
    END status
    from job j,job_contract jc,student s,emp_dep_sys eds
    where j.id = jc.job_id and jc.stu_num = s.stu_num and jc.`status` in ('2','-2','3') and j.emp_dep_id = eds.emp_dep_id and eds.emp_dep_id = (select emp_dep_id from emp_dep_sys eds where eds.account_num = #{accountNum})
    <if test="search != null and search != ''">
      and j.tittle = #{search}
    </if> order by jc.id desc
  </select>

  <select id="getUnevaluatedContractListByDep" resultType="java.util.HashMap">
    select distinct jc.id jobContractId,DATE_FORMAT(jc.create_time,'%Y-%m-%d %H:%i:%s') createTime,j.tittle jobName,jc.stu_num stuNum,s.`name` stuName,s.sex,j.salary,j.workdays,jc.confirm_user confirmUser,DATE_FORMAT(jc.confirm_time,'%Y-%m-%d %H:%i:%s') confirmTime
    from job j,job_contract jc,student s,emp_dep_sys eds
    where j.id = jc.job_id and jc.stu_num = s.stu_num and jc.`status` = '2' and j.emp_dep_id = eds.emp_dep_id and eds.emp_dep_id = (select emp_dep_id from emp_dep_sys eds where eds.account_num = #{accountNum}) and (TO_DAYS(NOW())-TO_DAYS(jc.confirm_time)>=j.workdays)
    <if test="search != null and search != ''">
      and j.tittle = #{search}
    </if> order by jc.id desc
  </select>

  <select id="getEvaluatedContractListByDep" resultType="java.util.HashMap">
    select distinct jc.id jobContractId,DATE_FORMAT(jc.create_time,'%Y-%m-%d %H:%i:%s') createTime,j.tittle jobName,jc.stu_num stuNum,s.`name` stuName,s.sex,j.salary,j.workdays,jc.confirm_user confirmUser,DATE_FORMAT(jc.confirm_time,'%Y-%m-%d %H:%i:%s') confirmTime,e.evaluater,DATE_FORMAT(e.evaluate_time,'%Y-%m-%d %H:%i:%s') evaluateTime,e.sxpd,e.jyjs,e.gztd,e.gznl,e.xzjs,e.zhsz,e.evaInfo
    from job j,job_contract jc,student s,emp_dep_sys eds,evaluate e
    where j.id = jc.job_id and jc.stu_num = s.stu_num and jc.`status` = '3' and j.emp_dep_id = eds.emp_dep_id and eds.emp_dep_id = (select emp_dep_id from emp_dep_sys eds where eds.account_num = #{accountNum})	and jc.id = e.job_contract_id
    <if test="search != null and search != ''">
      and j.tittle = #{search}
    </if> order by jc.id desc
  </select>

  <select id="getAllEvaluatedContractList" resultType="java.util.HashMap">
    select distinct jc.id jobContractId,DATE_FORMAT(jc.create_time,'%Y-%m-%d %H:%i:%s') createTime,j.tittle jobName,jc.stu_num stuNum,s.`name` stuName,s.sex,j.salary,j.workdays,jc.confirm_user confirmUser,DATE_FORMAT(jc.confirm_time,'%Y-%m-%d %H:%i:%s') confirmTime,e.evaluater,DATE_FORMAT(e.evaluate_time,'%Y-%m-%d %H:%i:%s') evaluateTime,e.sxpd,e.jyjs,e.gztd,e.gznl,e.xzjs,e.zhsz,e.evaInfo
    from job j,job_contract jc,student s,emp_dep_sys eds,evaluate e
    where j.id = jc.job_id and jc.stu_num = s.stu_num and jc.`status` = '3' and j.emp_dep_id = eds.emp_dep_id and jc.id = e.job_contract_id
    <if test="search != null and search != ''">
      and j.tittle = #{search}
    </if> order by jc.id desc
  </select>

  <delete id="delSomeContract" parameterType="java.util.ArrayList">
    delete from job_contract
    WHERE id IN
    <foreach collection="jobContractIdArr" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>

  <select id="getAcceptNum" parameterType="site.shzu.ws.model.JobContract" resultType="site.shzu.ws.model.Job">
    select  count(jc.id) acceptNum,jc.job_id id
    from job_contract jc
    where jc.job_id =
    <if test="jobId != null">
      #{jobId}
    </if>
    <if test="id != null">
      (select job_id from job_contract where id = #{id})
    </if>
      and jc.`status` in ('2','1','3','0')
  </select>

  <select id="getJObContractNum" parameterType="site.shzu.ws.model.JobContract" resultType="java.lang.Integer">
    select count(id) from job_contract where job_id = #{jobId} and stu_num = #{stuNum} and status in('1','2','3','0');
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from job_contract
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from job_contract
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="site.shzu.ws.model.JobContract">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into job_contract (id, job_id, stu_num, 
      status,,create_time, verify_user, verify_time,
      confirm_user, confirm_time, mark
      )
    values (#{id,jdbcType=INTEGER}, #{jobId,jdbcType=INTEGER}, #{stuNum,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{verifyUser,jdbcType=VARCHAR}, #{verifyTime,jdbcType=TIMESTAMP},
      #{confirmUser,jdbcType=VARCHAR}, #{confirmTime,jdbcType=TIMESTAMP}, #{mark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="site.shzu.ws.model.JobContract">
    insert into job_contract
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="jobId != null">
        job_id,
      </if>
      <if test="stuNum != null">
        stu_num,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="verifyUser != null">
        verify_user,
      </if>
      <if test="verifyTime != null">
        verify_time,
      </if>
      <if test="confirmUser != null">
        confirm_user,
      </if>
      <if test="confirmTime != null">
        confirm_time,
      </if>
      <if test="mark != null">
        mark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=INTEGER},
      <if test="jobId != null">
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="stuNum != null">
        #{stuNum,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="verifyUser != null">
        #{verifyUser,jdbcType=VARCHAR},
      </if>
      <if test="verifyTime != null">
        #{verifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmUser != null">
        #{confirmUser,jdbcType=VARCHAR},
      </if>
      <if test="confirmTime != null">
        #{confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mark != null">
        #{mark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="site.shzu.ws.model.JobContract">
    update job_contract
    <set>
      <if test="jobId != null">
        job_id = #{jobId,jdbcType=INTEGER},
      </if>
      <if test="stuNum != null">
        stu_num = #{stuNum,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="verifyUser != null">
        verify_user = #{verifyUser,jdbcType=VARCHAR},
      </if>
      <if test="verifyTime != null">
        verify_time = #{verifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmUser != null">
        confirm_user = #{confirmUser,jdbcType=VARCHAR},
      </if>
      <if test="confirmTime != null">
        confirm_time = #{confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mark != null">
        mark = #{mark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="site.shzu.ws.model.JobContract">
    update job_contract
    set job_id = #{jobId,jdbcType=INTEGER},
      stu_num = #{stuNum,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      verify_user = #{verifyUser,jdbcType=VARCHAR},
      verify_time = #{verifyTime,jdbcType=TIMESTAMP},
      confirm_user = #{confirmUser,jdbcType=VARCHAR},
      confirm_time = #{confirmTime,jdbcType=TIMESTAMP},
      mark = #{mark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>